{"version":3,"sources":["context.js","Pages/Active/Active.js","Pages/Home/Home.js","Pages/Completed/Completed.js","Pages/Cancelled/Cancelled.js","App.js","index.js"],"names":["AppContext","createContext","Post","children","useState","todos","setTodos","history","useHistory","Provider","value","handlePage","e","preventDefault","push","Active","useContext","className","onClick","map","obj","status","cancel","onChange","filter","obj2","id","target","checked","type","class","text","todo","console","log","Home","setTodo","day","setDay","useEffect","today","Date","toLocaleDateString","weekday","placeholder","now","Completed","Cancelled","App","basename","process","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51b882ba.chunk.js","sourcesContent":["import {createContext,useState} from 'react'\nimport { useHistory } from 'react-router'\n\n\nexport const AppContext = createContext(null)\n\nfunction Post({children}){\n    const [todos, setTodos] = useState([])\n    const history=useHistory()\n    const handlePage = (e) => {\n        e.preventDefault()\n        return (\n            history.push('/'))\n    }\n   \n\n    return(\n   <AppContext.Provider value={{todos,setTodos,handlePage}}>\n       {children}\n   </AppContext.Provider>\n    )\n}\n\nexport default Post","import React, { useContext } from 'react'\nimport '../Home/Home.css'\nimport { AppContext } from '../../context';\n\n\nfunction Active() {   \n    const { todos, setTodos } = useContext(AppContext)\n    const {handlePage}=useContext(AppContext) \n    \n    return (\n        <div className='activeBody'>\n            <div className='top'>\n                <span className=\"back\" onClick={handlePage}> Home</span>\n            </div>\n            <div className=\"head\">\n                <h1>Active ToDos</h1>\n            </div>\n            <div className=\"activeInput\">\n                \n                {todos.map((obj) => {\n                    if (obj.status==='false' && obj.cancel==='false'){                   \n                    return ( \n                        <div className=\"activeInputs\">\n                            <div className=\"left\">\n                                <input onChange={(e) => {\n                                   setTodos(todos.filter(obj2 => {\n                                        if (obj2.id === obj.id) {\n                                            obj2.status = e.target.checked\n                                        }\n                                        return obj2\n                                    }))\n                                }} value={obj.status} type=\"checkbox\" />\n                                 <span class=\"tooltiptext\">Completed</span>\n                                <br></br>\n                            </div>\n                            <div className=\"listText\">\n                                \n                            <h3> {obj.text.todo}</h3>\n                            </div>\n                            <div className=\"right\">\n                                <i onClick={(e) => {\n                                     obj.cancel='true'\n                                    setTodos(todos.filter(obj2 => {\n                                        if (obj2.id === obj.id) {\n                                            obj2.cancel = \"true\"\n                                        }\n                                        console.log(obj2);\n                                        return obj2\n                                    }))\n                                }} value={obj.cancel} className=\"fas fa-times\"></i>\n                             <span class=\"tooltiptext\">Cancel</span>\n\n                            </div>\n                        </div>\n                    ) }\n                    return null\n                })}\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Active\n","import React, { useState, useEffect, useContext } from 'react'\nimport './Home.css';\nimport { useHistory } from 'react-router'\nimport { AppContext } from '../../context';\n\nfunction Home() {\n    const [todo, setTodo] = useState('')\n    const [day, setDay] = useState('initial')\n    const history = useHistory()\n    const { todos } = useContext(AppContext)\n    const { setTodos } = useContext(AppContext)\n\n    useEffect(() => {\n        const today = new Date();\n        setDay(today.toLocaleDateString('en', { weekday: 'long' }));\n        console.log(\"useEffect day called\", day);\n    }, [day])\n\n    const onAddTodo = () => {\n        setTodos([...todos, { id: Date.now(), text: { todo }, status: 'false', cancel: 'false' }])\n\n    }\n\n    return (\n        <div className=\"app\">\n            <div className=\"topDiv\">\n                <div className=\"mainHeading\">\n                    <h1>ToDo List</h1>\n                </div>\n                <div className=\"subHeading\">\n                    <br />\n                    <h2>Whoop, it's {day} üåù ‚òï </h2>\n                </div>\n                <div className=\"input\">\n                    <div className=\"inputs\">\n                        <input value={todo} onChange={(e) => setTodo(e.target.value)} type=\"text\" placeholder=\"üñäÔ∏è Add item...\" />\n                        <i onClick={() => onAddTodo()}\n                            className=\"fas fa-plus\"></i>\n                    </div>\n                </div>\n            </div>\n            <div className=\"bottomDiv\">\n                <div className=\"todos\">\n                    <h1 className=\"highlight\" onClick={() => {\n                        history.push('/active');\n                    }}>Active ToDos</h1>\n\n                </div>\n                <div className=\"completed\">\n                    <h1 className=\"highlight\" onClick={() => {\n                        history.push('/completed')\n                    }}>Completed</h1>\n                </div>\n                <div className=\"cancelled\">\n                    <h1 className=\"highlight\" onClick={() => {\n                        history.push('/cancelled')\n                    }}>Cancelled</h1>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React, { useContext } from 'react'\nimport '../Home/Home.css'\nimport { AppContext } from '../../context'\n\nfunction Completed() {\n\n    const { todos, setTodos, handlePage } = useContext(AppContext)\n\n\n    return (\n        <div className=\"activeBody\">\n            <div className=\"top\">\n                <span className=\"back\" onClick={handlePage}>Home</span>\n            </div>\n            <div className=\"head\">\n                <h1>Completed</h1>\n            </div>\n            <div className=\"activeInput\">\n                {todos.map((obj) => {\n                    if (obj.status === true) {\n                        return (\n                            <div className=\"activeInputs\">\n                                <div className=\"listText\">\n                                    <h3>{obj.text.todo}</h3>\n                                </div>\n                                <div className=\"right\">\n                                    <i onClick={() => {\n                                        setTodos(todos.filter(obj2 => {\n                                            if (obj2.id === obj.id) {\n                                                obj2 = null\n                                            }\n                                            return obj2\n                                        }))\n                                    }} className=\"fas fa-times\"></i>\n                                    <span class=\"tooltiptext\">Remove</span>\n                                </div>\n                            </div>\n                        )\n                    }\n                    return null\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Completed\n","import React, { useContext } from 'react'\nimport { AppContext } from '../../context'\nimport '../Home/Home.css'\n\n\nfunction Cancelled() {\n\n    const { todos, setTodos, handlePage } = useContext(AppContext)\n\n    return (\n        <div className=\"activeBody\">\n            <div className='top'>\n                <span className=\"back\" onClick={handlePage}>Home</span>\n            </div>\n            <div className=\"head\">\n                <h1>Cancelled</h1>\n            </div>\n            <div className=\"activeInput\">\n                {todos.map((obj) => {\n                    if (obj.cancel === \"true\") {\n                        return (\n                            <div className=\"activeInputs\">\n                                <div className=\"listText\">\n                                    <h3>{obj.text.todo}</h3>\n                                </div>\n                                <div className=\"right\">\n                                    <i onClick={() => {\n                                        setTodos(todos.filter(obj2 => {\n                                            if (obj2.id === obj.id) {\n                                                obj2 = null\n                                            }\n                                            return obj2\n                                        }))\n                                    }} className=\"fas fa-times\"></i>\n                                    <span class=\"tooltiptext\">Remove</span>\n                                </div>\n                            </div>\n                        )\n                    }\n                    return null\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Cancelled\n","import React from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Active from './Pages/Active/Active';\nimport Home from './Pages/Home/Home';\nimport Completed from './Pages/Completed/Completed';\nimport Cancelled from './Pages/Cancelled/Cancelled'\nimport Post from './context'\n\nfunction App() {\n  \n\n  return (\n    <div>\n      \n      <Router basename={process.env.PUBLIC_URL}>\n      <Post>\n        <Route exact path='/'>\n        <Home  />\n        </Route>\n        \n        <Route path='/active'>\n        <Active />\n        </Route>\n        \n        <Route  path='/completed'>\n        <Completed/>\n        </Route>\n       \n        <Route  path='/cancelled'>\n        <Cancelled />\n        </Route>\n        </Post>\n      </Router>\n     \n      </div>\n\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}